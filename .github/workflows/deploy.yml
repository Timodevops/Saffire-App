name: AWS Terraform CI/CD

on:
  push:
    branches:
      - '**'  # Allow deployments from any branch (e.g. dev)
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
          - production
      destroy:
        description: 'Destroy infrastructure instead of apply?'
        required: false
        default: 'false'
        type: choice
        options:
          - false
          - true

jobs:
  deploy:
    name: Terraform ${{ github.event.inputs.destroy == 'true' && 'Destroy' || 'Deploy' }} to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.event.inputs.environment == 'dev' && 'Dev' || github.event.inputs.environment == 'uat' && 'UAT' || 'Prod' }}
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: ‚ú® Checkout Code
        uses: actions/checkout@v4

      - name: ‚öñÔ∏è Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: üëÄ Show Environment Info
        run: echo "Deploying to: ${{ github.event.inputs.environment }} | Destroy: ${{ github.event.inputs.destroy }}"

      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          aws-access-key-id: ${{ github.event.inputs.environment == 'dev' && secrets.AWS_ACCESS_KEY_ID_DEV || github.event.inputs.environment == 'uat' && secrets.AWS_ACCESS_KEY_ID_UAT || secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ github.event.inputs.environment == 'dev' && secrets.AWS_SECRET_ACCESS_KEY_DEV || github.event.inputs.environment == 'uat' && secrets.AWS_SECRET_ACCESS_KEY_UAT || secrets.AWS_SECRET_ACCESS_KEY_PROD }}

      - name: ‚öñÔ∏è Terraform Init
        run: terraform init

      - name: üìä Terraform Plan
        if: github.event.inputs.destroy != 'true'
        run: terraform plan

      - name: ‚úÖ Terraform Apply
        if: github.event.inputs.destroy != 'true'
        run: terraform apply -auto-approve

      - name: ‚ùå Terraform Destroy
        if: github.event.inputs.destroy == 'true'
        run: terraform destroy -auto-approve

  promote-to-uat:
    name: Promote Dev ‚ûî UAT
    needs: deploy
    if: github.ref == 'refs/heads/dev' && github.event.inputs.environment == 'uat' && github.event.inputs.destroy != 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: UAT
    environment: uat
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_UAT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_UAT }}
          aws-region: us-west-2
      - name: Promote Dev to UAT (Auto)
        run: |
          terraform init
          terraform apply -auto-approve

  deploy-prod:
    name: Deploy to Production (Manual)
    if: github.ref == 'refs/heads/main' && github.event.inputs.environment == 'production'
    needs: deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Prod
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: us-west-2
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve

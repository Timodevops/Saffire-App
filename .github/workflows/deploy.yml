name: AWS Terraform CI/CD

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Which environment to deploy or destroy?'
        required: true
        default: 'uat'
        type: choice
        options:
          - dev
          - uat
          - production
      destroy:
        description: 'Destroy infrastructure?'
        required: true
        default: 'false'
        type: choice
        options:
          - false
          - true

env:
  REGION: us-west-2

jobs:
  # Auto-deploy Dev on any push
  dev-auto:
    name: 🚧 Deploy to Dev (Auto)
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Dev
    steps:
      - name: ⏬ Checkout Code
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS (Dev)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.REGION }}

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 🧱 Terraform Init
        run: terraform init

      - name: 🔍 Terraform Plan
        run: terraform plan

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve

  # Manual deployments (UAT & Prod)
  deploy-manual:
    name: 🚀 Manual Deploy / Destroy
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.event.inputs.environment == 'dev' && 'Dev' || github.event.inputs.environment == 'uat' && 'UAT' || 'Prod' }}

    steps:
      - name: ⏬ Checkout Code
        uses: actions/checkout@v4

      - name: ✅ Check Branch Permission
        run: |
          echo "Deploying ${{ github.event.inputs.environment }} from ${{ github.ref }}"
          if [[ "${{ github.event.inputs.environment }}" == "production" && "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "❌ ERROR: Production deployments must be run from the main branch"
            exit 1
          fi

      - name: 🔐 Configure AWS (Manual)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment | upper)] }}
          aws-secret-access-key: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment | upper)] }}
          aws-region: ${{ env.REGION }}

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 🧱 Terraform Init
        run: terraform init

      - name: 🔍 Terraform Plan
        if: github.event.inputs.destroy != 'true'
        run: terraform plan

      - name: 🚀 Terraform Apply
        if: github.event.inputs.destroy != 'true'
        run: terraform apply -auto-approve

      - name: 🔥 Terraform Destroy
        if: github.event.inputs.destroy == 'true'
        run: terraform destroy -auto-approve
